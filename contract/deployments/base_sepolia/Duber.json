{
  "address": "0xC4a85Bfc6589D8cCE1cf95a700aF954d20d4e8f0",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tripId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransactionRecorded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tripId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "driverAddress",
          "type": "address"
        }
      ],
      "name": "TripAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tripId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fare",
          "type": "uint256"
        }
      ],
      "name": "TripCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tripId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "riderAddress",
          "type": "address"
        }
      ],
      "name": "TripCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tripId",
          "type": "uint256"
        }
      ],
      "name": "acceptTrip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tripId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fare",
          "type": "uint256"
        }
      ],
      "name": "completeTrip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_origin",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_destination",
          "type": "string"
        }
      ],
      "name": "createTrip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "drivers",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "licenseNumber",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_driverAddress",
          "type": "address"
        }
      ],
      "name": "getDriverDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDriverTrips",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tripId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "riderAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "driverAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "origin",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "destination",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fare",
              "type": "uint256"
            },
            {
              "internalType": "enum Duber.TripStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "transactionId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Duber.Trip[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRiderTrips",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tripId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "riderAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "driverAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "origin",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "destination",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fare",
              "type": "uint256"
            },
            {
              "internalType": "enum Duber.TripStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "transactionId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Duber.Trip[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_transactionId",
          "type": "uint256"
        }
      ],
      "name": "getTransactionDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tripId",
          "type": "uint256"
        }
      ],
      "name": "getTripDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "enum Duber.TripStatus",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_licenseNumber",
          "type": "uint256"
        }
      ],
      "name": "registerDriver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transactionCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tripCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd9ba6e8c0f6baa35129f68a874c810f7e3b7b1b576a6256b4303185dcc55b724",
  "receipt": {
    "to": null,
    "from": "0x176d979B8Bbd6860159953E52B0FC3967E20d9e4",
    "contractAddress": "0xC4a85Bfc6589D8cCE1cf95a700aF954d20d4e8f0",
    "transactionIndex": 5,
    "gasUsed": "2410305",
    "logsBloom": "0x
    "blockHash": "0x2b21695fd3084a86b0d42f3324619fd894f5ac4440dc867e7e5bb0b006a97099",
    "transactionHash": "0xd9ba6e8c0f6baa35129f68a874c810f7e3b7b1b576a6256b4303185dcc55b724",
    "logs": [],
    "blockNumber": 13979468,
    "cumulativeGasUsed": "5022357",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8ac9583824880c74e5c650703d05a8f9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tripId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransactionRecorded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tripId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"driverAddress\",\"type\":\"address\"}],\"name\":\"TripAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tripId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fare\",\"type\":\"uint256\"}],\"name\":\"TripCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tripId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"riderAddress\",\"type\":\"address\"}],\"name\":\"TripCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tripId\",\"type\":\"uint256\"}],\"name\":\"acceptTrip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tripId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fare\",\"type\":\"uint256\"}],\"name\":\"completeTrip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_origin\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_destination\",\"type\":\"string\"}],\"name\":\"createTrip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"drivers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"licenseNumber\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_driverAddress\",\"type\":\"address\"}],\"name\":\"getDriverDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDriverTrips\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tripId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"riderAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"driverAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"destination\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fare\",\"type\":\"uint256\"},{\"internalType\":\"enum Duber.TripStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"internalType\":\"struct Duber.Trip[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRiderTrips\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tripId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"riderAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"driverAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"destination\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fare\",\"type\":\"uint256\"},{\"internalType\":\"enum Duber.TripStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"internalType\":\"struct Duber.Trip[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transactionId\",\"type\":\"uint256\"}],\"name\":\"getTransactionDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tripId\",\"type\":\"uint256\"}],\"name\":\"getTripDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enum Duber.TripStatus\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_licenseNumber\",\"type\":\"uint256\"}],\"name\":\"registerDriver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transactionCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tripCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lock.sol\":\"Duber\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Lock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// Duber Smart Contract\\ncontract Duber {\\n    //  ========= struct declarations start ============\\n    struct Driver {\\n        string name;\\n        uint256 licenseNumber;\\n        bool isActive;\\n        uint256[] tripIds;\\n    }\\n\\n    struct Trip {\\n        uint256 tripId;\\n        address riderAddress;\\n        address driverAddress;\\n        string origin;\\n        string destination;\\n        uint256 startTime;\\n        uint256 endTime;\\n        uint256 fare;\\n        TripStatus status;\\n        uint256 transactionId;\\n    }\\n\\n    enum TripStatus {\\n        Created,\\n        Accepted,\\n        Completed,\\n        Cancelled\\n    }\\n\\n    struct Transaction {\\n        uint256 transactionId;\\n        uint256 tripId;\\n        uint256 amount;\\n        uint256 timestamp;\\n    }\\n    //  ========= struct declarations end ============\\n\\n    //  ========= mapping declarations start ============\\n    mapping(address => Driver) public drivers;\\n    mapping(address => uint256[]) private riders;\\n    mapping(uint256 => Trip) private trips;\\n    mapping(uint256 => Transaction) private transactions;\\n    //  ========= mapping declarations end ============\\n\\n    //  ========= variable declarations start ============\\n    uint256 public tripCounter;\\n    uint256 public transactionCounter;\\n    //  ========= variable declarations end ============\\n\\n    //  ========= event declarations start ============\\n    event TripCreated(uint256 indexed tripId, address indexed riderAddress);\\n    event TripAccepted(uint256 indexed tripId, address indexed driverAddress);\\n    event TripCompleted(uint256 indexed tripId, uint256 fare);\\n    event TransactionRecorded(\\n        uint256 indexed transactionId,\\n        uint256 indexed tripId,\\n        uint256 amount\\n    );\\n\\n    //  ========= event declarations end ==========\\n\\n    // ---------------------driver specific function declarations start----------------------------\\n    function registerDriver(\\n        string memory _name,\\n        uint256 _licenseNumber\\n    ) public {\\n        require(\\n            drivers[msg.sender].licenseNumber == 0,\\n            \\\"Driver already registered\\\"\\n        );\\n        drivers[msg.sender] = Driver(\\n            _name,\\n            _licenseNumber,\\n            true,\\n            new uint256[](0)\\n        );\\n    }\\n\\n    function acceptTrip(uint256 _tripId) public {\\n        require(drivers[msg.sender].isActive, \\\"Driver is not active\\\");\\n        Trip storage trip = trips[_tripId];\\n        require(trip.status == TripStatus.Created, \\\"Trip is not available\\\");\\n\\n        trip.driverAddress = msg.sender;\\n        trip.status = TripStatus.Accepted;\\n        trip.startTime = block.timestamp;\\n        drivers[msg.sender].tripIds.push(_tripId);\\n\\n        emit TripAccepted(_tripId, msg.sender);\\n    }\\n\\n    function completeTrip(uint256 _tripId, uint256 _fare) public {\\n        Trip storage trip = trips[_tripId];\\n        require(\\n            trip.driverAddress == msg.sender,\\n            \\\"Only the trip driver can complete the trip\\\"\\n        );\\n        require(trip.status == TripStatus.Accepted, \\\"Trip is not in progress\\\");\\n\\n        trip.endTime = block.timestamp;\\n        trip.fare = _fare;\\n        trip.status = TripStatus.Completed;\\n\\n        transactionCounter++;\\n        trip.transactionId = transactionCounter;\\n        transactions[transactionCounter] = Transaction(\\n            transactionCounter,\\n            _tripId,\\n            _fare,\\n            block.timestamp\\n        );\\n\\n        emit TripCompleted(_tripId, _fare);\\n        emit TransactionRecorded(transactionCounter, _tripId, _fare);\\n    }\\n\\n    function getDriverDetails(\\n        address _driverAddress\\n    ) public view returns (string memory, uint256, bool) {\\n        Driver memory driver = drivers[_driverAddress];\\n        return (driver.name, driver.licenseNumber, driver.isActive);\\n    }\\n\\n    function getDriverTrips() public view returns (Trip[] memory) {\\n        require(\\n            drivers[msg.sender].licenseNumber != 0,\\n            \\\"Driver does not exists\\\"\\n        );\\n\\n        uint256[] memory tripIdsArr = drivers[msg.sender].tripIds;\\n        Trip[] memory tripsArr = new Trip[](tripIdsArr.length);\\n\\n        for (uint i = 0; i < tripIdsArr.length; i++) {\\n            tripsArr[i] = (trips[tripIdsArr[i]]);\\n        }\\n\\n        return tripsArr;\\n    }\\n\\n    // ------------------------- driver specific function declarations end ----------------------------\\n\\n    // ------------------------- rider specific function declarations start ----------------------------\\n    function createTrip(\\n        string memory _origin,\\n        string memory _destination\\n    ) public {\\n        require(\\n            (drivers[msg.sender].licenseNumber == 0),\\n            \\\"Driver cannot create a trip\\\"\\n        );\\n\\n        if (riders[msg.sender].length == 0) {\\n            riders[msg.sender] = new uint256[](0);\\n        }\\n\\n        tripCounter++;\\n        trips[tripCounter] = Trip(\\n            tripCounter,\\n            msg.sender,\\n            address(0),\\n            _origin,\\n            _destination,\\n            0,\\n            0,\\n            0,\\n            TripStatus.Created,\\n            0\\n        );\\n        riders[msg.sender].push(tripCounter);\\n        emit TripCreated(tripCounter, msg.sender);\\n    }\\n\\n    function getRiderTrips() public view returns (Trip[] memory) {\\n        require(riders[msg.sender].length != 0, \\\"Rider does not exists\\\");\\n\\n        uint256[] memory tripIdsArr = riders[msg.sender];\\n        Trip[] memory tripsArr = new Trip[](tripIdsArr.length);\\n\\n        for (uint i = 0; i < tripIdsArr.length; i++) {\\n            tripsArr[i] = (trips[tripIdsArr[i]]);\\n        }\\n\\n        return tripsArr;\\n    }\\n\\n    // ------------------------- rider specific function declarations end ----------------------------\\n\\n    function getTripDetails(\\n        uint256 _tripId\\n    )\\n        public\\n        view\\n        returns (\\n            uint256,\\n            address,\\n            address,\\n            string memory,\\n            string memory,\\n            uint256,\\n            uint256,\\n            uint256,\\n            TripStatus,\\n            uint256\\n        )\\n    {\\n        Trip memory trip = trips[_tripId];\\n        return (\\n            trip.tripId,\\n            trip.riderAddress,\\n            trip.driverAddress,\\n            trip.origin,\\n            trip.destination,\\n            trip.startTime,\\n            trip.endTime,\\n            trip.fare,\\n            trip.status,\\n            trip.transactionId\\n        );\\n    }\\n\\n    function getTransactionDetails(\\n        uint256 _transactionId\\n    ) public view returns (uint256, uint256, uint256, uint256) {\\n        Transaction memory transaction = transactions[_transactionId];\\n        return (\\n            transaction.transactionId,\\n            transaction.tripId,\\n            transaction.amount,\\n            transaction.timestamp\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x9b58ac40d78d4fc422f1ee432ab7535e5ab0c07246781628b8cc3505387a6423\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612abd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80634aa60186116100715780634aa601861461019b5780636fa4ec27146101cd578063c73e43cc146101eb578063ce55433214610207578063e28ae68314610223578063f769e2b51461023f576100b4565b806309ad26a2146100b95780630fa683d3146100d7578063124c128e1461010a57806314e887e81461014357806316ed402a146101615780631e8fd7401461017f575b600080fd5b6100c1610271565b6040516100ce9190611e72565b60405180910390f35b6100f160048036038101906100ec9190611ed4565b610699565b6040516101019493929190611f10565b60405180910390f35b610124600480360381019061011f9190611ed4565b61070d565b60405161013a9a99989796959493929190611fbd565b60405180910390f35b61014b6109d2565b6040516101589190612067565b60405180910390f35b6101696109d8565b6040516101769190611e72565b60405180910390f35b610199600480360381019061019491906121b7565b610e01565b005b6101b560048036038101906101b0919061225b565b6111f9565b6040516101c4939291906122a3565b60405180910390f35b6101d56112b8565b6040516101e29190612067565b60405180910390f35b61020560048036038101906102009190611ed4565b6112be565b005b610221600480360381019061021c91906122e1565b611504565b005b61023d60048036038101906102389190612321565b611762565b005b6102596004803603810190610254919061225b565b6118f5565b604051610268939291906122a3565b60405180910390f35b60606000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050036102f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ef906123c9565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561038357602002820191906000526020600020905b81548152602001906001019080831161036f575b505050505090506000815167ffffffffffffffff8111156103a7576103a661208c565b5b6040519080825280602002602001820160405280156103e057816020015b6103cd611a73565b8152602001906001900390816103c55790505b50905060005b82518110156106905760026000848381518110610406576104056123e9565b5b6020026020010151815260200190815260200160002060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820180546104ee90612447565b80601f016020809104026020016040519081016040528092919081815260200182805461051a90612447565b80156105675780601f1061053c57610100808354040283529160200191610567565b820191906000526020600020905b81548152906001019060200180831161054a57829003601f168201915b5050505050815260200160048201805461058090612447565b80601f01602080910402602001604051908101604052809291908181526020018280546105ac90612447565b80156105f95780601f106105ce576101008083540402835291602001916105f9565b820191906000526020600020905b8154815290600101906020018083116105dc57829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16600381111561064557610644611c84565b5b600381111561065757610656611c84565b5b8152602001600982015481525050828281518110610678576106776123e9565b5b602002602001018190525080806001019150506103e6565b50809250505090565b600080600080600060036000878152602001908152602001600020604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905080600001518160200151826040015183606001519450945094509450509193509193565b6000806000606080600080600080600080600260008d815260200190815260200160002060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805461080390612447565b80601f016020809104026020016040519081016040528092919081815260200182805461082f90612447565b801561087c5780601f106108515761010080835404028352916020019161087c565b820191906000526020600020905b81548152906001019060200180831161085f57829003601f168201915b5050505050815260200160048201805461089590612447565b80601f01602080910402602001604051908101604052809291908181526020018280546108c190612447565b801561090e5780601f106108e35761010080835404028352916020019161090e565b820191906000526020600020905b8154815290600101906020018083116108f157829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16600381111561095a57610959611c84565b5b600381111561096c5761096b611c84565b5b81526020016009820154815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001518861010001518961012001519a509a509a509a509a509a509a509a509a509a50509193959799509193959799565b60055481565b606060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015403610a5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a55906124c4565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301805480602002602001604051908101604052809291908181526020018280548015610aeb57602002820191906000526020600020905b815481526020019060010190808311610ad7575b505050505090506000815167ffffffffffffffff811115610b0f57610b0e61208c565b5b604051908082528060200260200182016040528015610b4857816020015b610b35611a73565b815260200190600190039081610b2d5790505b50905060005b8251811015610df85760026000848381518110610b6e57610b6d6123e9565b5b6020026020010151815260200190815260200160002060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054610c5690612447565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8290612447565b8015610ccf5780601f10610ca457610100808354040283529160200191610ccf565b820191906000526020600020905b815481529060010190602001808311610cb257829003601f168201915b50505050508152602001600482018054610ce890612447565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1490612447565b8015610d615780601f10610d3657610100808354040283529160200191610d61565b820191906000526020600020905b815481529060010190602001808311610d4457829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff166003811115610dad57610dac611c84565b5b6003811115610dbf57610dbe611c84565b5b8152602001600982015481525050828281518110610de057610ddf6123e9565b5b60200260200101819052508080600101915050610b4e565b50809250505090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414610e85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7c90612530565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905003610f6d57600067ffffffffffffffff811115610eea57610ee961208c565b5b604051908082528060200260200182016040528015610f185781602001602082028036833780820191505090505b50600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610f6b929190611b04565b505b60046000815480929190610f809061257f565b919050555060405180610140016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020016000815260200160008152602001600081526020016000600381111561100757611006611c84565b5b815260200160008152506002600060045481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030190816110d39190612773565b5060808201518160040190816110e99190612773565b5060a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff0219169083600381111561113457611133611c84565b5b02179055506101208201518160090155905050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060045490806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff166004547f6f996f0217b128d759c7abd022f0a1e25de64720df5a818ba149186339a91fc160405160405180910390a35050565b600060205280600052604060002060009150905080600001805461121c90612447565b80601f016020809104026020016040519081016040528092919081815260200182805461124890612447565b80156112955780601f1061126a57610100808354040283529160200191611295565b820191906000526020600020905b81548152906001019060200180831161127857829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16905083565b60045481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1661134c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134390612891565b60405180910390fd5b60006002600083815260200190815260200160002090506000600381111561137757611376611c84565b5b8160080160009054906101000a900460ff16600381111561139b5761139a611c84565b5b146113db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d2906128fd565b60405180910390fd5b338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160080160006101000a81548160ff0219169083600381111561144657611445611c84565b5b02179055504281600501819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018290806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16827fb035540eb2cfcfc643df7da1708eb8c6e1fc646a955daa27e17c9b8b902dfc8b60405160405180910390a35050565b60006002600084815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146115ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a49061298f565b60405180910390fd5b600160038111156115c1576115c0611c84565b5b8160080160009054906101000a900460ff1660038111156115e5576115e4611c84565b5b14611625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161c906129fb565b60405180910390fd5b42816006018190555081816007018190555060028160080160006101000a81548160ff0219169083600381111561165f5761165e611c84565b5b0217905550600560008154809291906116779061257f565b91905055506005548160090181905550604051806080016040528060055481526020018481526020018381526020014281525060036000600554815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155905050827fbe91c0e11ad7e25ee0e09afb2468fa4a6003ff00ea555c21102764fa13a58b208360405161171a9190612067565b60405180910390a2826005547fea22cc9274beab25c6fd6280e2fd10fe3d51d1d5fb5578bf39c6a57d5fa44e34846040516117559190612067565b60405180910390a3505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154146117e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117dd90612a67565b60405180910390fd5b6040518060800160405280838152602001828152602001600115158152602001600067ffffffffffffffff8111156118215761182061208c565b5b60405190808252806020026020018201604052801561184f5781602001602082028036833780820191505090505b508152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816118a69190612773565b506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160030190805190602001906118ed929190611b04565b509050505050565b606060008060008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201805461195590612447565b80601f016020809104026020016040519081016040528092919081815260200182805461198190612447565b80156119ce5780601f106119a3576101008083540402835291602001916119ce565b820191906000526020600020905b8154815290600101906020018083116119b157829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff1615151515815260200160038201805480602002602001604051908101604052809291908181526020018280548015611a4b57602002820191906000526020600020905b815481526020019060010190808311611a37575b5050505050815250509050806000015181602001518260400151935093509350509193909250565b60405180610140016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160008152602001600081526020016000815260200160006003811115611af757611af6611c84565b5b8152602001600081525090565b828054828255906000526020600020908101928215611b40579160200282015b82811115611b3f578251825591602001919060010190611b24565b5b509050611b4d9190611b51565b5090565b5b80821115611b6a576000816000905550600101611b52565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611bad81611b9a565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bde82611bb3565b9050919050565b611bee81611bd3565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c2e578082015181840152602081019050611c13565b60008484015250505050565b6000601f19601f8301169050919050565b6000611c5682611bf4565b611c608185611bff565b9350611c70818560208601611c10565b611c7981611c3a565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611cc457611cc3611c84565b5b50565b6000819050611cd582611cb3565b919050565b6000611ce582611cc7565b9050919050565b611cf581611cda565b82525050565b600061014083016000830151611d146000860182611ba4565b506020830151611d276020860182611be5565b506040830151611d3a6040860182611be5565b5060608301518482036060860152611d528282611c4b565b91505060808301518482036080860152611d6c8282611c4b565b91505060a0830151611d8160a0860182611ba4565b5060c0830151611d9460c0860182611ba4565b5060e0830151611da760e0860182611ba4565b50610100830151611dbc610100860182611cec565b50610120830151611dd1610120860182611ba4565b508091505092915050565b6000611de88383611cfb565b905092915050565b6000602082019050919050565b6000611e0882611b6e565b611e128185611b79565b935083602082028501611e2485611b8a565b8060005b85811015611e605784840389528151611e418582611ddc565b9450611e4c83611df0565b925060208a01995050600181019050611e28565b50829750879550505050505092915050565b60006020820190508181036000830152611e8c8184611dfd565b905092915050565b6000604051905090565b600080fd5b600080fd5b611eb181611b9a565b8114611ebc57600080fd5b50565b600081359050611ece81611ea8565b92915050565b600060208284031215611eea57611ee9611e9e565b5b6000611ef884828501611ebf565b91505092915050565b611f0a81611b9a565b82525050565b6000608082019050611f256000830187611f01565b611f326020830186611f01565b611f3f6040830185611f01565b611f4c6060830184611f01565b95945050505050565b611f5e81611bd3565b82525050565b600082825260208201905092915050565b6000611f8082611bf4565b611f8a8185611f64565b9350611f9a818560208601611c10565b611fa381611c3a565b840191505092915050565b611fb781611cda565b82525050565b600061014082019050611fd3600083018d611f01565b611fe0602083018c611f55565b611fed604083018b611f55565b8181036060830152611fff818a611f75565b905081810360808301526120138189611f75565b905061202260a0830188611f01565b61202f60c0830187611f01565b61203c60e0830186611f01565b61204a610100830185611fae565b612058610120830184611f01565b9b9a5050505050505050505050565b600060208201905061207c6000830184611f01565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6120c482611c3a565b810181811067ffffffffffffffff821117156120e3576120e261208c565b5b80604052505050565b60006120f6611e94565b905061210282826120bb565b919050565b600067ffffffffffffffff8211156121225761212161208c565b5b61212b82611c3a565b9050602081019050919050565b82818337600083830152505050565b600061215a61215584612107565b6120ec565b90508281526020810184848401111561217657612175612087565b5b612181848285612138565b509392505050565b600082601f83011261219e5761219d612082565b5b81356121ae848260208601612147565b91505092915050565b600080604083850312156121ce576121cd611e9e565b5b600083013567ffffffffffffffff8111156121ec576121eb611ea3565b5b6121f885828601612189565b925050602083013567ffffffffffffffff81111561221957612218611ea3565b5b61222585828601612189565b9150509250929050565b61223881611bd3565b811461224357600080fd5b50565b6000813590506122558161222f565b92915050565b60006020828403121561227157612270611e9e565b5b600061227f84828501612246565b91505092915050565b60008115159050919050565b61229d81612288565b82525050565b600060608201905081810360008301526122bd8186611f75565b90506122cc6020830185611f01565b6122d96040830184612294565b949350505050565b600080604083850312156122f8576122f7611e9e565b5b600061230685828601611ebf565b925050602061231785828601611ebf565b9150509250929050565b6000806040838503121561233857612337611e9e565b5b600083013567ffffffffffffffff81111561235657612355611ea3565b5b61236285828601612189565b925050602061237385828601611ebf565b9150509250929050565b7f526964657220646f6573206e6f74206578697374730000000000000000000000600082015250565b60006123b3601583611f64565b91506123be8261237d565b602082019050919050565b600060208201905081810360008301526123e2816123a6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061245f57607f821691505b60208210810361247257612471612418565b5b50919050565b7f44726976657220646f6573206e6f742065786973747300000000000000000000600082015250565b60006124ae601683611f64565b91506124b982612478565b602082019050919050565b600060208201905081810360008301526124dd816124a1565b9050919050565b7f4472697665722063616e6e6f7420637265617465206120747269700000000000600082015250565b600061251a601b83611f64565b9150612525826124e4565b602082019050919050565b600060208201905081810360008301526125498161250d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061258a82611b9a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125bc576125bb612550565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126297fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826125ec565b61263386836125ec565b95508019841693508086168417925050509392505050565b6000819050919050565b600061267061266b61266684611b9a565b61264b565b611b9a565b9050919050565b6000819050919050565b61268a83612655565b61269e61269682612677565b8484546125f9565b825550505050565b600090565b6126b36126a6565b6126be818484612681565b505050565b5b818110156126e2576126d76000826126ab565b6001810190506126c4565b5050565b601f821115612727576126f8816125c7565b612701846125dc565b81016020851015612710578190505b61272461271c856125dc565b8301826126c3565b50505b505050565b600082821c905092915050565b600061274a6000198460080261272c565b1980831691505092915050565b60006127638383612739565b9150826002028217905092915050565b61277c82611bf4565b67ffffffffffffffff8111156127955761279461208c565b5b61279f8254612447565b6127aa8282856126e6565b600060209050601f8311600181146127dd57600084156127cb578287015190505b6127d58582612757565b86555061283d565b601f1984166127eb866125c7565b60005b82811015612813578489015182556001820191506020850194506020810190506127ee565b86831015612830578489015161282c601f891682612739565b8355505b6001600288020188555050505b505050505050565b7f447269766572206973206e6f7420616374697665000000000000000000000000600082015250565b600061287b601483611f64565b915061288682612845565b602082019050919050565b600060208201905081810360008301526128aa8161286e565b9050919050565b7f54726970206973206e6f7420617661696c61626c650000000000000000000000600082015250565b60006128e7601583611f64565b91506128f2826128b1565b602082019050919050565b60006020820190508181036000830152612916816128da565b9050919050565b7f4f6e6c79207468652074726970206472697665722063616e20636f6d706c657460008201527f6520746865207472697000000000000000000000000000000000000000000000602082015250565b6000612979602a83611f64565b91506129848261291d565b604082019050919050565b600060208201905081810360008301526129a88161296c565b9050919050565b7f54726970206973206e6f7420696e2070726f6772657373000000000000000000600082015250565b60006129e5601783611f64565b91506129f0826129af565b602082019050919050565b60006020820190508181036000830152612a14816129d8565b9050919050565b7f44726976657220616c7265616479207265676973746572656400000000000000600082015250565b6000612a51601983611f64565b9150612a5c82612a1b565b602082019050919050565b60006020820190508181036000830152612a8081612a44565b905091905056fea26469706673582212201d1a25cb63903e2d6c451aa1817bb8aa4203d7ec92cbef87ae58c8001221d02f64736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80634aa60186116100715780634aa601861461019b5780636fa4ec27146101cd578063c73e43cc146101eb578063ce55433214610207578063e28ae68314610223578063f769e2b51461023f576100b4565b806309ad26a2146100b95780630fa683d3146100d7578063124c128e1461010a57806314e887e81461014357806316ed402a146101615780631e8fd7401461017f575b600080fd5b6100c1610271565b6040516100ce9190611e72565b60405180910390f35b6100f160048036038101906100ec9190611ed4565b610699565b6040516101019493929190611f10565b60405180910390f35b610124600480360381019061011f9190611ed4565b61070d565b60405161013a9a99989796959493929190611fbd565b60405180910390f35b61014b6109d2565b6040516101589190612067565b60405180910390f35b6101696109d8565b6040516101769190611e72565b60405180910390f35b610199600480360381019061019491906121b7565b610e01565b005b6101b560048036038101906101b0919061225b565b6111f9565b6040516101c4939291906122a3565b60405180910390f35b6101d56112b8565b6040516101e29190612067565b60405180910390f35b61020560048036038101906102009190611ed4565b6112be565b005b610221600480360381019061021c91906122e1565b611504565b005b61023d60048036038101906102389190612321565b611762565b005b6102596004803603810190610254919061225b565b6118f5565b604051610268939291906122a3565b60405180910390f35b60606000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050036102f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ef906123c9565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561038357602002820191906000526020600020905b81548152602001906001019080831161036f575b505050505090506000815167ffffffffffffffff8111156103a7576103a661208c565b5b6040519080825280602002602001820160405280156103e057816020015b6103cd611a73565b8152602001906001900390816103c55790505b50905060005b82518110156106905760026000848381518110610406576104056123e9565b5b6020026020010151815260200190815260200160002060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820180546104ee90612447565b80601f016020809104026020016040519081016040528092919081815260200182805461051a90612447565b80156105675780601f1061053c57610100808354040283529160200191610567565b820191906000526020600020905b81548152906001019060200180831161054a57829003601f168201915b5050505050815260200160048201805461058090612447565b80601f01602080910402602001604051908101604052809291908181526020018280546105ac90612447565b80156105f95780601f106105ce576101008083540402835291602001916105f9565b820191906000526020600020905b8154815290600101906020018083116105dc57829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16600381111561064557610644611c84565b5b600381111561065757610656611c84565b5b8152602001600982015481525050828281518110610678576106776123e9565b5b602002602001018190525080806001019150506103e6565b50809250505090565b600080600080600060036000878152602001908152602001600020604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905080600001518160200151826040015183606001519450945094509450509193509193565b6000806000606080600080600080600080600260008d815260200190815260200160002060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805461080390612447565b80601f016020809104026020016040519081016040528092919081815260200182805461082f90612447565b801561087c5780601f106108515761010080835404028352916020019161087c565b820191906000526020600020905b81548152906001019060200180831161085f57829003601f168201915b5050505050815260200160048201805461089590612447565b80601f01602080910402602001604051908101604052809291908181526020018280546108c190612447565b801561090e5780601f106108e35761010080835404028352916020019161090e565b820191906000526020600020905b8154815290600101906020018083116108f157829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16600381111561095a57610959611c84565b5b600381111561096c5761096b611c84565b5b81526020016009820154815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001518861010001518961012001519a509a509a509a509a509a509a509a509a509a50509193959799509193959799565b60055481565b606060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015403610a5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a55906124c4565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301805480602002602001604051908101604052809291908181526020018280548015610aeb57602002820191906000526020600020905b815481526020019060010190808311610ad7575b505050505090506000815167ffffffffffffffff811115610b0f57610b0e61208c565b5b604051908082528060200260200182016040528015610b4857816020015b610b35611a73565b815260200190600190039081610b2d5790505b50905060005b8251811015610df85760026000848381518110610b6e57610b6d6123e9565b5b6020026020010151815260200190815260200160002060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054610c5690612447565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8290612447565b8015610ccf5780601f10610ca457610100808354040283529160200191610ccf565b820191906000526020600020905b815481529060010190602001808311610cb257829003601f168201915b50505050508152602001600482018054610ce890612447565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1490612447565b8015610d615780601f10610d3657610100808354040283529160200191610d61565b820191906000526020600020905b815481529060010190602001808311610d4457829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff166003811115610dad57610dac611c84565b5b6003811115610dbf57610dbe611c84565b5b8152602001600982015481525050828281518110610de057610ddf6123e9565b5b60200260200101819052508080600101915050610b4e565b50809250505090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414610e85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7c90612530565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905003610f6d57600067ffffffffffffffff811115610eea57610ee961208c565b5b604051908082528060200260200182016040528015610f185781602001602082028036833780820191505090505b50600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610f6b929190611b04565b505b60046000815480929190610f809061257f565b919050555060405180610140016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020016000815260200160008152602001600081526020016000600381111561100757611006611c84565b5b815260200160008152506002600060045481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030190816110d39190612773565b5060808201518160040190816110e99190612773565b5060a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff0219169083600381111561113457611133611c84565b5b02179055506101208201518160090155905050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060045490806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff166004547f6f996f0217b128d759c7abd022f0a1e25de64720df5a818ba149186339a91fc160405160405180910390a35050565b600060205280600052604060002060009150905080600001805461121c90612447565b80601f016020809104026020016040519081016040528092919081815260200182805461124890612447565b80156112955780601f1061126a57610100808354040283529160200191611295565b820191906000526020600020905b81548152906001019060200180831161127857829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16905083565b60045481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1661134c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134390612891565b60405180910390fd5b60006002600083815260200190815260200160002090506000600381111561137757611376611c84565b5b8160080160009054906101000a900460ff16600381111561139b5761139a611c84565b5b146113db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d2906128fd565b60405180910390fd5b338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160080160006101000a81548160ff0219169083600381111561144657611445611c84565b5b02179055504281600501819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018290806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16827fb035540eb2cfcfc643df7da1708eb8c6e1fc646a955daa27e17c9b8b902dfc8b60405160405180910390a35050565b60006002600084815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146115ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a49061298f565b60405180910390fd5b600160038111156115c1576115c0611c84565b5b8160080160009054906101000a900460ff1660038111156115e5576115e4611c84565b5b14611625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161c906129fb565b60405180910390fd5b42816006018190555081816007018190555060028160080160006101000a81548160ff0219169083600381111561165f5761165e611c84565b5b0217905550600560008154809291906116779061257f565b91905055506005548160090181905550604051806080016040528060055481526020018481526020018381526020014281525060036000600554815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155905050827fbe91c0e11ad7e25ee0e09afb2468fa4a6003ff00ea555c21102764fa13a58b208360405161171a9190612067565b60405180910390a2826005547fea22cc9274beab25c6fd6280e2fd10fe3d51d1d5fb5578bf39c6a57d5fa44e34846040516117559190612067565b60405180910390a3505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154146117e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117dd90612a67565b60405180910390fd5b6040518060800160405280838152602001828152602001600115158152602001600067ffffffffffffffff8111156118215761182061208c565b5b60405190808252806020026020018201604052801561184f5781602001602082028036833780820191505090505b508152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816118a69190612773565b506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160030190805190602001906118ed929190611b04565b509050505050565b606060008060008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201805461195590612447565b80601f016020809104026020016040519081016040528092919081815260200182805461198190612447565b80156119ce5780601f106119a3576101008083540402835291602001916119ce565b820191906000526020600020905b8154815290600101906020018083116119b157829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff1615151515815260200160038201805480602002602001604051908101604052809291908181526020018280548015611a4b57602002820191906000526020600020905b815481526020019060010190808311611a37575b5050505050815250509050806000015181602001518260400151935093509350509193909250565b60405180610140016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160008152602001600081526020016000815260200160006003811115611af757611af6611c84565b5b8152602001600081525090565b828054828255906000526020600020908101928215611b40579160200282015b82811115611b3f578251825591602001919060010190611b24565b5b509050611b4d9190611b51565b5090565b5b80821115611b6a576000816000905550600101611b52565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611bad81611b9a565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bde82611bb3565b9050919050565b611bee81611bd3565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c2e578082015181840152602081019050611c13565b60008484015250505050565b6000601f19601f8301169050919050565b6000611c5682611bf4565b611c608185611bff565b9350611c70818560208601611c10565b611c7981611c3a565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611cc457611cc3611c84565b5b50565b6000819050611cd582611cb3565b919050565b6000611ce582611cc7565b9050919050565b611cf581611cda565b82525050565b600061014083016000830151611d146000860182611ba4565b506020830151611d276020860182611be5565b506040830151611d3a6040860182611be5565b5060608301518482036060860152611d528282611c4b565b91505060808301518482036080860152611d6c8282611c4b565b91505060a0830151611d8160a0860182611ba4565b5060c0830151611d9460c0860182611ba4565b5060e0830151611da760e0860182611ba4565b50610100830151611dbc610100860182611cec565b50610120830151611dd1610120860182611ba4565b508091505092915050565b6000611de88383611cfb565b905092915050565b6000602082019050919050565b6000611e0882611b6e565b611e128185611b79565b935083602082028501611e2485611b8a565b8060005b85811015611e605784840389528151611e418582611ddc565b9450611e4c83611df0565b925060208a01995050600181019050611e28565b50829750879550505050505092915050565b60006020820190508181036000830152611e8c8184611dfd565b905092915050565b6000604051905090565b600080fd5b600080fd5b611eb181611b9a565b8114611ebc57600080fd5b50565b600081359050611ece81611ea8565b92915050565b600060208284031215611eea57611ee9611e9e565b5b6000611ef884828501611ebf565b91505092915050565b611f0a81611b9a565b82525050565b6000608082019050611f256000830187611f01565b611f326020830186611f01565b611f3f6040830185611f01565b611f4c6060830184611f01565b95945050505050565b611f5e81611bd3565b82525050565b600082825260208201905092915050565b6000611f8082611bf4565b611f8a8185611f64565b9350611f9a818560208601611c10565b611fa381611c3a565b840191505092915050565b611fb781611cda565b82525050565b600061014082019050611fd3600083018d611f01565b611fe0602083018c611f55565b611fed604083018b611f55565b8181036060830152611fff818a611f75565b905081810360808301526120138189611f75565b905061202260a0830188611f01565b61202f60c0830187611f01565b61203c60e0830186611f01565b61204a610100830185611fae565b612058610120830184611f01565b9b9a5050505050505050505050565b600060208201905061207c6000830184611f01565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6120c482611c3a565b810181811067ffffffffffffffff821117156120e3576120e261208c565b5b80604052505050565b60006120f6611e94565b905061210282826120bb565b919050565b600067ffffffffffffffff8211156121225761212161208c565b5b61212b82611c3a565b9050602081019050919050565b82818337600083830152505050565b600061215a61215584612107565b6120ec565b90508281526020810184848401111561217657612175612087565b5b612181848285612138565b509392505050565b600082601f83011261219e5761219d612082565b5b81356121ae848260208601612147565b91505092915050565b600080604083850312156121ce576121cd611e9e565b5b600083013567ffffffffffffffff8111156121ec576121eb611ea3565b5b6121f885828601612189565b925050602083013567ffffffffffffffff81111561221957612218611ea3565b5b61222585828601612189565b9150509250929050565b61223881611bd3565b811461224357600080fd5b50565b6000813590506122558161222f565b92915050565b60006020828403121561227157612270611e9e565b5b600061227f84828501612246565b91505092915050565b60008115159050919050565b61229d81612288565b82525050565b600060608201905081810360008301526122bd8186611f75565b90506122cc6020830185611f01565b6122d96040830184612294565b949350505050565b600080604083850312156122f8576122f7611e9e565b5b600061230685828601611ebf565b925050602061231785828601611ebf565b9150509250929050565b6000806040838503121561233857612337611e9e565b5b600083013567ffffffffffffffff81111561235657612355611ea3565b5b61236285828601612189565b925050602061237385828601611ebf565b9150509250929050565b7f526964657220646f6573206e6f74206578697374730000000000000000000000600082015250565b60006123b3601583611f64565b91506123be8261237d565b602082019050919050565b600060208201905081810360008301526123e2816123a6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061245f57607f821691505b60208210810361247257612471612418565b5b50919050565b7f44726976657220646f6573206e6f742065786973747300000000000000000000600082015250565b60006124ae601683611f64565b91506124b982612478565b602082019050919050565b600060208201905081810360008301526124dd816124a1565b9050919050565b7f4472697665722063616e6e6f7420637265617465206120747269700000000000600082015250565b600061251a601b83611f64565b9150612525826124e4565b602082019050919050565b600060208201905081810360008301526125498161250d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061258a82611b9a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125bc576125bb612550565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126297fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826125ec565b61263386836125ec565b95508019841693508086168417925050509392505050565b6000819050919050565b600061267061266b61266684611b9a565b61264b565b611b9a565b9050919050565b6000819050919050565b61268a83612655565b61269e61269682612677565b8484546125f9565b825550505050565b600090565b6126b36126a6565b6126be818484612681565b505050565b5b818110156126e2576126d76000826126ab565b6001810190506126c4565b5050565b601f821115612727576126f8816125c7565b612701846125dc565b81016020851015612710578190505b61272461271c856125dc565b8301826126c3565b50505b505050565b600082821c905092915050565b600061274a6000198460080261272c565b1980831691505092915050565b60006127638383612739565b9150826002028217905092915050565b61277c82611bf4565b67ffffffffffffffff8111156127955761279461208c565b5b61279f8254612447565b6127aa8282856126e6565b600060209050601f8311600181146127dd57600084156127cb578287015190505b6127d58582612757565b86555061283d565b601f1984166127eb866125c7565b60005b82811015612813578489015182556001820191506020850194506020810190506127ee565b86831015612830578489015161282c601f891682612739565b8355505b6001600288020188555050505b505050505050565b7f447269766572206973206e6f7420616374697665000000000000000000000000600082015250565b600061287b601483611f64565b915061288682612845565b602082019050919050565b600060208201905081810360008301526128aa8161286e565b9050919050565b7f54726970206973206e6f7420617661696c61626c650000000000000000000000600082015250565b60006128e7601583611f64565b91506128f2826128b1565b602082019050919050565b60006020820190508181036000830152612916816128da565b9050919050565b7f4f6e6c79207468652074726970206472697665722063616e20636f6d706c657460008201527f6520746865207472697000000000000000000000000000000000000000000000602082015250565b6000612979602a83611f64565b91506129848261291d565b604082019050919050565b600060208201905081810360008301526129a88161296c565b9050919050565b7f54726970206973206e6f7420696e2070726f6772657373000000000000000000600082015250565b60006129e5601783611f64565b91506129f0826129af565b602082019050919050565b60006020820190508181036000830152612a14816129d8565b9050919050565b7f44726976657220616c7265616479207265676973746572656400000000000000600082015250565b6000612a51601983611f64565b9150612a5c82612a1b565b602082019050919050565b60006020820190508181036000830152612a8081612a44565b905091905056fea26469706673582212201d1a25cb63903e2d6c451aa1817bb8aa4203d7ec92cbef87ae58c8001221d02f64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 52,
        "contract": "contracts/Lock.sol:Duber",
        "label": "drivers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(Driver)11_storage)"
      },
      {
        "astId": 57,
        "contract": "contracts/Lock.sol:Duber",
        "label": "riders",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 62,
        "contract": "contracts/Lock.sol:Duber",
        "label": "trips",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Trip)33_storage)"
      },
      {
        "astId": 67,
        "contract": "contracts/Lock.sol:Duber",
        "label": "transactions",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Transaction)47_storage)"
      },
      {
        "astId": 69,
        "contract": "contracts/Lock.sol:Duber",
        "label": "tripCounter",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 71,
        "contract": "contracts/Lock.sol:Duber",
        "label": "transactionCounter",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(TripStatus)38": {
        "encoding": "inplace",
        "label": "enum Duber.TripStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_struct(Driver)11_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Duber.Driver)",
        "numberOfBytes": "32",
        "value": "t_struct(Driver)11_storage"
      },
      "t_mapping(t_uint256,t_struct(Transaction)47_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Duber.Transaction)",
        "numberOfBytes": "32",
        "value": "t_struct(Transaction)47_storage"
      },
      "t_mapping(t_uint256,t_struct(Trip)33_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Duber.Trip)",
        "numberOfBytes": "32",
        "value": "t_struct(Trip)33_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Driver)11_storage": {
        "encoding": "inplace",
        "label": "struct Duber.Driver",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Lock.sol:Duber",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5,
            "contract": "contracts/Lock.sol:Duber",
            "label": "licenseNumber",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7,
            "contract": "contracts/Lock.sol:Duber",
            "label": "isActive",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 10,
            "contract": "contracts/Lock.sol:Duber",
            "label": "tripIds",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Transaction)47_storage": {
        "encoding": "inplace",
        "label": "struct Duber.Transaction",
        "members": [
          {
            "astId": 40,
            "contract": "contracts/Lock.sol:Duber",
            "label": "transactionId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 42,
            "contract": "contracts/Lock.sol:Duber",
            "label": "tripId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 44,
            "contract": "contracts/Lock.sol:Duber",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 46,
            "contract": "contracts/Lock.sol:Duber",
            "label": "timestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Trip)33_storage": {
        "encoding": "inplace",
        "label": "struct Duber.Trip",
        "members": [
          {
            "astId": 13,
            "contract": "contracts/Lock.sol:Duber",
            "label": "tripId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 15,
            "contract": "contracts/Lock.sol:Duber",
            "label": "riderAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 17,
            "contract": "contracts/Lock.sol:Duber",
            "label": "driverAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 19,
            "contract": "contracts/Lock.sol:Duber",
            "label": "origin",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 21,
            "contract": "contracts/Lock.sol:Duber",
            "label": "destination",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 23,
            "contract": "contracts/Lock.sol:Duber",
            "label": "startTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 25,
            "contract": "contracts/Lock.sol:Duber",
            "label": "endTime",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 27,
            "contract": "contracts/Lock.sol:Duber",
            "label": "fare",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 30,
            "contract": "contracts/Lock.sol:Duber",
            "label": "status",
            "offset": 0,
            "slot": "8",
            "type": "t_enum(TripStatus)38"
          },
          {
            "astId": 32,
            "contract": "contracts/Lock.sol:Duber",
            "label": "transactionId",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}